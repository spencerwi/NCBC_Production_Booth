# This is a basic workflow to help you get started with Actions

name: Generate new PDFs

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  generate_new_PDFs:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Generate PDFs
        run: docker run --volume "$GITHUB_WORKSPACE:/data" --workdir "/data" spencerwi/ncbc_production_booth_docs

      - name: Tag these PDFs as the latest ones
        uses: EndBug/latest-tag@latest
        with:
          # You can change the name of the tag or branch with this input.
          # Default: 'latest'
          ref: 'latest'
          # If a description is provided, the action will use it to create an annotated tag. If none is given, the action will create a lightweight tag.
          # Default: ''
          description: Updated PDFs for NCBC Production Booth Documents

      - name: Create a Release for the latest PDFs so we can download them easily
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          tag_name: 'latest'
          release_name: Version ${{ github.ref }}
          body: |
            Updated PDFs for NCBC Production Booth Documents
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload Manual PDF to the release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Manual.pdf
          asset_name: Manual.pdf
          asset_content_type: application/pdf

      - name: Upload Playbook PDF to the release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Playbook.pdf
          asset_name: Playbook.pdf
          asset_content_type: application/pdf
